{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["all_locations","us_states","focus_areas_list","App","getMuiTheme","createMuiTheme","overrides","MuiTableCell","head","fontWeight","root","fontFamily","MuiIconButton","colorInherit","color","MuiSvgIcon","fontSizeSmall","backgroundColor","data","require","i","length","cur_array","focus_area","split","j","cur_item","includes","push","find_focus_areas","columns","name","label","options","filter","sort","hint","customBodyRender","value","tableMeta","updateValue","opp_link","index","title","website","react_default","a","createElement","href","filterType","values_arr","b","toLowerCase","localeCompare","toString","filterOptions","names","logic","focus_areas","focus_areas_array","filter_val","grade","val","location","hasIntlItem","hasUSItem","location_arr","cur_loc","MuiThemeProvider","theme","this","dist_default","selectableRows","rowsPerPage","rowsPerPageOptions","isRowSelectable","dataIndex","onRowsDelete","rowsDeleted","React","Component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae729069.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport MUIDataTable from 'mui-datatables';\nimport {createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\n\nconst all_locations = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \n\"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \n\"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \n\"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \n\"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \n\"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"Washington D.C.\", \n\"West Virginia\", \"Wisconsin\", \"Wyoming\", \"Nationwide\", \"Global\"];\n\nconst us_states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \n\"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\", \n\"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \n\"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \n\"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \n\"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"Washington D.C.\", \n\"West Virginia\", \"Wisconsin\", \"Wyoming\"];\n\nlet focus_areas_list = [];\n\nfunction find_focus_areas(data) {\n    for (let i = 0; i < data.length; i++) {\n        let cur = data[i].focus_area; //unabridged list of focus areas\n        let cur_array = cur.split(\", \"); //converted into array of focus areas\n        for (let j = 0; j < cur_array.length; j++) {\n            let cur_item = cur_array[j]; //individual focus area within cur_array\n            if (!focus_areas_list.includes(cur_item)) {\n                focus_areas_list.push(cur_item);\n            }\n        }\n    }\n\n}\n\nclass App extends React.Component {\n\n    getMuiTheme = () => createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                head: {\n                    fontWeight: \"bold\",\n                },\n                root: {\n                    fontFamily: \"Helvetica Neue\",\n                }\n            },\n            MuiIconButton: {\n                colorInherit: {\n                    color: \"#105EA8\",\n                }\n            },\n            MuiSvgIcon: {\n                fontSizeSmall: {\n                    color: \"#FFFFFF\",\n                    backgroundColor: \"#FFFFFF\",\n                }\n            },\n        }\n    })\n\n  render() {\n    const data = require('./datafile.json');\n\n    find_focus_areas(data);\n\n    const columns = [\n        {\n            name: \"title\",\n            label: \"Opportunity\",\n            options: {\n                filter: false, \n                sort: false,\n                hint: \"Program name and hyperlink\",\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    let opp_link;\n                    for (let index = 0; index < data.length; index++) {\n                        let cur_item = data[index];\n                        if (cur_item.title == value) {\n                            opp_link = cur_item.website;\n                            break;\n                        }\n                    }\n                    return (\n                        <a href={opp_link}>{value}</a>\n                    );\n                }\n            },\n        },\n        {\n            name: \"opp_type\",\n            label: \"Opportunity Type\",\n            options: {\n                filter: true, \n                filterType: 'multiselect',\n                sort: false,\n                hint: \"Programmatic format of opportunity\"\n            }\n        },\n        {\n            name: \"focus_area\",\n            label: \"Focus Area\",\n            options: {\n                filter: true,\n                sort: false,\n                //sort focus areas tags in alphabetical order\n                customBodyRender: (value, tableMeta, updateValue) => {\n                    let values_arr = value.split(\", \");\n                    values_arr = values_arr.sort(function(a, b) {\n                        return a.toLowerCase().localeCompare(b.toLowerCase());\n                    });\n                    return (\n                        values_arr.toString()\n                    );\n                },\n                filterOptions: {\n                    names: focus_areas_list,\n                    logic(focus_areas, filter) {\n                        let focus_areas_array = focus_areas.split(\", \");\n\n                        for (let i = 0; i < filter.length; i++) {\n                            let filter_val = filter[i];\n                            for (let j = 0; j < focus_areas_array.length; j++) {\n                                if (filter_val == focus_areas_array[j]) {\n                                    return false;\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                },\n                filterType: 'multiselect',\n                hint: \"Issue area through which a program hopes to create impact\"\n            }\n        },\n        {\n            name: \"deadline\",\n            label: \"Application Deadline\",\n            options: {\n                filter: false, \n                sort: true,\n                hint: \"Date applications are due\"\n            }\n        },\n        {\n            name: \"grade_level\",\n            label: \"Grade Level\",\n            options: {\n                filter: true, \n                sort: false, \n                filterOptions: {\n                    names: [9, 10, 11, 12],\n                    logic(grade, filter) {\n                        for (let i = 0; i < filter.length; i++) {\n                            let val = filter[i];\n                            if (!grade.includes(val)) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    }\n                },\n                filterType: \"multiselect\",\n                hint: \"Grade level to which this opportunity is open\"\n            }\n        },\n        {\n            name: \"location\",\n            label: \"Location\",\n            options: {\n                filter: true, \n                filterType: \"multiselect\",\n                sort: false,\n                hint: \"Geographic region in which program is based\",\n                filterOptions: {\n                    names: all_locations,\n                    logic(location, filter) {\n                        if (location.length == 0) {\n                            return true;\n                        }\n\n                        let hasIntlItem = false; //has at least one international item\n                        let hasUSItem = false; //has at least one domestic item\n                        let location_arr = location.split(\", \");\n                        for (let i = 0; i < location_arr.length; i++) {\n                            let cur_loc = location_arr[i];\n                            if (!all_locations.includes(cur_loc)) {\n                                hasIntlItem = true;\n                            }\n                            if (us_states.includes(cur_loc)) {\n                                hasUSItem = true;\n                            }\n                        }\n\n                        for (let i = 0; i < filter.length; i++) {\n                            let filter_val = filter[i];\n                           if (location.includes(filter_val) \n                                || (filter_val == \"Global\" && hasIntlItem)\n                                || (filter_val == \"Nationwide\" && hasUSItem)) {\n                               return false;\n                           }\n                        }\n                        return true;\n                    }\n                }\n            }\n        },\n        {\n            name: \"description\",\n            label: \"Description\",\n            options: {\n                filter: false, \n                sort: false,\n                hint: \"Summary of opportunity\",\n            }\n        },\n    ];\n\n    const options = {\n        filterType: 'dropdown',\n        selectableRows: 'none',\n        rowsPerPage: 5,\n        rowsPerPageOptions: [5, 10, 15, 25],\n        isRowSelectable: (dataIndex) => {\n            return false;\n        },\n        onRowsDelete: (rowsDeleted) => {\n            return;\n        },\n        /*\n        customSort: (data, colIndex, order) => {\n            if (colIndex == 0) { //opportunity title\n                return data.sort((a, b) => {\n                    if (a.data[1] == b.data[1]) {\n                        return (a.data[colIndex].localeCompare(b.data[colIndex])) * (order === 'desc' ? 1: -1);\n                    }\n                    return (a.data[1].localeCompare(b.data[1])) * (order === 'desc' ? 1 : -1);\n                });\n            } \n            /*\n            else if (colIndex == 3) { //application deadline\n                let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n                \"October\", \"November\", \"December\"];\n                return data.sort((a, b) => {\n                    //TODO: clean spreadsheet for dates\n                    //TODO: implement sorting\n                });\n            }\n        }\n        */\n    };\n\n    return (\n        <div>\n            <MuiThemeProvider theme={\n                this.getMuiTheme()\n            }>\n            <MUIDataTable\n                data={data}\n                columns={columns}\n                options={options}\n            />\n            </MuiThemeProvider>\n        </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}